
###########################################################################
#                                                                         #
#  SConscript -- DJTG Two Wire Demo SCONS Build Script                    #
#                                                                         #
###########################################################################
#  Author: MTA                                                            #
#  Copyright 2012 Digilent Inc.                                           #
###########################################################################
#  File Description:                                                      #
#                                                                         #
#  This is a SCONS build script for the DJTG Two Wire Demo. It is not     #
#  meant to be executed directly. It should be executed by a parent       #
#  script (../SConstruct) that provides the appropriate variables         #
#  required to build the application. The parent script should setup the  #
#  environment with the appropriate CPPDEFINES and CCFLAGS.               #
#                                                                         #
###########################################################################
#  Revision History:                                                      #
#                                                                         #
#  07/17/2012(MTA): created                                               #
#                                                                         #
###########################################################################

# Import variables exported by the calling SConstruct.
Import('env', 'destdir', 'libpath')


# Define a list of libraries that the application must link against.
libs = ['dmgr', 'djtg']


# Create a list of source files to pass to the compiler.
sources = [Glob('*.cpp')]

# Clone (copy) the global environment and make modifications to the copy
# before performing the build.
envBuild = env.Clone()


# Create an executable and place it in the correct output folder.
envBuild.Install(destdir, envBuild.Program('DjtgTwoWireDemo', sources, LIBS=libs, LIBPATH=libpath))

